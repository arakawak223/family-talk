rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // ユーザーデータ: 自分のデータのみ読み書き可能
    match /users/{userId} {
      allow read: if request.auth != null && request.auth.uid == userId;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // 家族グループ: メンバーのみアクセス可能
    match /families/{familyId} {
      // メンバーかどうかを確認するヘルパー関数
      function isFamilyMember() {
        return request.auth != null &&
               request.auth.uid in resource.data.members;
      }

      // 新規作成時は作成者をメンバーに含める必要がある
      function isCreatorInMembers() {
        return request.auth != null &&
               request.auth.uid in request.resource.data.members;
      }

      // 読み取り: メンバーのみ
      allow read: if isFamilyMember();

      // 作成: 認証済みユーザーで、自分がメンバーに含まれている場合
      allow create: if request.auth != null && isCreatorInMembers();

      // 更新: メンバーのみ
      allow update: if isFamilyMember();

      // 削除: メンバーのみ（または作成者のみに制限する場合は追加条件が必要）
      allow delete: if isFamilyMember();
    }

    // 音声メッセージ: 認証済みユーザーのみアクセス可能
    match /voice_messages/{messageId} {
      // メッセージの送信者または受信者のみ読み取り可能
      function isMessageParticipant() {
        return request.auth != null &&
               (request.auth.uid == resource.data.senderId ||
                request.auth.uid in resource.data.recipientIds);
      }

      // 読み取り: メッセージの参加者のみ
      allow read: if isMessageParticipant();

      // 作成: 認証済みユーザーで、送信者IDが自分である場合
      allow create: if request.auth != null &&
                       request.auth.uid == request.resource.data.senderId;

      // 更新: 送信者のみ（例: isRead フラグの更新など）
      allow update: if request.auth != null &&
                       request.auth.uid == resource.data.senderId;

      // 削除: 送信者のみ
      allow delete: if request.auth != null &&
                       request.auth.uid == resource.data.senderId;
    }

    // 質問データ: 全ユーザーが読み取り可能（管理者のみ書き込み可能）
    match /questions/{questionId} {
      // 読み取り: 認証済みユーザー全員
      allow read: if request.auth != null;

      // 書き込み: 管理者のみ（カスタムクレームで admin フラグを設定）
      allow write: if request.auth != null &&
                      request.auth.token.admin == true;
    }

    // 挨拶メッセージ: 全ユーザーが読み取り可能
    match /greetings/{greetingId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null &&
                      request.auth.token.admin == true;
    }

    // ユーザープロフィール画像メタデータ
    match /user_avatars/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth != null && request.auth.uid == userId;
    }

    // 家族招待リンク
    match /family_invites/{inviteId} {
      // 読み取り: 全認証済みユーザー（招待リンクを受け取った人）
      allow read: if request.auth != null;

      // 作成: 認証済みユーザー
      allow create: if request.auth != null;

      // 更新・削除: 作成者のみ
      allow update, delete: if request.auth != null &&
                               request.auth.uid == resource.data.createdBy;
    }

    // デフォルトルール: すべてを拒否
    match /{document=**} {
      allow read, write: if false;
    }
  }
}